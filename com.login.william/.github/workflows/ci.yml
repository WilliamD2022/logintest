name: CI/CD - Simple Auth API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: com.login.william
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Rodar UNIT tests (@Tag unit)
        run: mvn -B -q clean test -Djunit.jupiter.tags=unit

      - name: Verificar target/allure-results (unit)
        if: always()
        run: |
          echo "target/allure-results (unit):"
          ls -la target/allure-results || true

      - name: Upload Allure results (UNIT)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-unit
          path: com.login.william/target/allure-results
          if-no-files-found: error

  api-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    defaults:
      run:
        working-directory: com.login.william
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Rodar API tests (@Tag api)
        run: mvn -B -q clean test -Djunit.jupiter.tags=api

      - name: Verificar target/allure-results (api)
        if: always()
        run: |
          echo "target/allure-results (api):"
          ls -la target/allure-results || true

      - name: Upload Allure results (API)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-api
          path: com.login.william/target/allure-results
          if-no-files-found: error

  allure-report:
    runs-on: ubuntu-latest
    needs: [unit-tests, api-tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Baixar Allure results (UNIT)
        uses: actions/download-artifact@v4
        with:
          name: allure-results-unit
          path: results/unit

      - name: Baixar Allure results (API)
        uses: actions/download-artifact@v4
        with:
          name: allure-results-api
          path: results/api

      - name: Agregar resultados
        run: |
          mkdir -p results/merged
          cp -R results/unit/* results/merged/ 2>/dev/null || true
          cp -R results/api/*  results/merged/ 2>/dev/null || true
          echo "Arquivos agregados:"
          find results/merged -type f -maxdepth 2 -print || true
          if [ -z "$(ls -A results/merged || true)" ]; then
            echo "Sem resultados para gerar Allure"; exit 1; fi

      - name: Baixar Allure CLI
        run: |
          curl -sLo allure.tgz https://repo1.maven.org/maven2/io/qameta/allure/allure-commandline/2.27.0/allure-commandline-2.27.0.tgz
          tar -xzf allure.tgz

      - name: Gerar Allure Report (UNIT+API)
        run: |
          ./allure-2.27.0/bin/allure generate results/merged -o allure-report --clean
          test -f allure-report/index.html && echo "Report gerado com sucesso."

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

  # se você já tem deploy-pages configurado e funcionando, mantenha:
  deploy-pages:
    runs-on: ubuntu-latest
    needs: allure-report
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Download Allure report
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
